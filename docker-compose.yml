version: '3.8'

services:
  traefik:
      image: traefik:v2.6
      container_name: "traefik"
      command:
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--entrypoints.web.address=:80"
      ports:
        - "80:80"
      #      - "8080:8080"
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: mariadb:latest
    container_name: db
    ports:
      - "3308:3306"
    stop_grace_period: 5s
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=grafana
      - MYSQL_USER=grafana
      - MYSQL_PASSWORD=grafana
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - "db:/var/lib/mysql"

  angular-sso:
    container_name: angular-sso
    hostname: angular-sso.localhost
    domainname: angular-sso.localhost
    tty: true
    build:
      context: ./docker
      dockerfile: Dockerfile
      args:
        - USERNAME
        - PASSWORD
        - EMAIL
    working_dir: /var/www/angular_sso
    command: [ 'ng', 'serve', '--host', '0.0.0.0', '--disable-host-check' ]
    volumes:
      - ./angular_sso:/var/www/angular_sso
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.angular-sso.rule=Host(`angular-sso.localhost`)"
      - "traefik.http.services.angular-sso.loadbalancer.server.port=4200"
      - "traefik.http.routers.angular-sso.entrypoints=web"
  
  portainer:
    container_name: portainer
    hostname: portainer.localhost
    image: portainer/portainer-ce
    security_opt:
      - no-new-privileges:true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "portainer_data:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.localhost`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer.service=portainer"

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - php-fpm
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ${PATH_TO_CODEBASE}:/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plain-js.rule=Host(`plain-js.localhost`)"
#      - "traefik.http.services.plain-js.loadbalancer.server.port=80"
#      - "traefik.http.routers.plain-js.entrypoints=web"

  php-fpm:
    container_name: php-fpm
    hostname: php-fpm
    env_file:
      - .env
      - ./php-fpm/.xdebug.env
    build:
      args:
        user: ${DEV_USER}
        uid: ${DEV_UID}
      context: ./php-fpm
      dockerfile: Dockerfile
    volumes:
      - ./php-fpm/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./php-fpm/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      - ${PATH_TO_CODEBASE}:/var/www/html

  keycloak:
    image: quay.io/keycloak/keycloak:16.1.1
    container_name: keycloak
    hostname: keycloak.localhost
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_LOGLEVEL: INFO
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: mariadb
      DB_ADDR: db
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
      PROXY_ADDRESS_FORWARDING: "true"
      JAVA_OPTS: "-Djboss.as.management.blocking.timeout=700"
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak.entrypoints=web"

volumes:
  db:
  portainer_data: